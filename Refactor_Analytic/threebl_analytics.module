<?php
/**
 * Drupal hook_menu
 *
 * @return array
 */
function threebl_analytics_menu()
{
    $items = array();

    $items['Dashboard/Analytics/Views'] = array(
        'title' => 'Analytics',
        'description' => 'Analytics Views',
        'page callback' => 'threebl_analytics_viewAnalytics',
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Views/mediatype'] = array(
        'title' => 'Media Type',
        'description' => 'Media Type ',
        'page callback' => 'threebl_analytics_MediaType',
        'page arguments' => array(4),
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Views/mediaid'] = array(
        'title' => 'Media Id',
        'description' => 'Media Id',
        'page callback' => 'threebl_analytics_MediaTypeId',
        'page arguments' => array(4),
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Views/mediatype/ajax'] = array(
        'title' => 'Media Type',
        'description' => 'Media Id',
        'page callback' => 'threebl_analytics_MediaTypeAjax',
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Searching'] = array(
        'title' => 'Media Searching',
        'description' => 'Media Searching',
        'page callback' => 'threebl_analytics_searching',
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Reports'] = array(
        'title' => 'Reports',
        'description' => 'Reports',
        'page callback' => 'threebl_analytics_reports',
        'access arguments' => array('dashboard analytics'),
    );

    $items['Dashboard/Analytics/Views/Excel'] = array(
        'title' => ' Excel Views',
        'description' => 'Excel Views',
        'page callback' => 'threebl_analytics_excel',
        'page arguments' => array(),
        'access arguments' => array('dashboard analytics'),
    );
    return $items;
}

/**
 * view count of particular company and 3bl company
 *
 * @return string
 */
function threebl_analytics_viewAnalytics()
{
    //Include all required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');
    module_load_include('inc', 'threebl_analytics_reports', 'inc/clsReports');
    $intCompanyOgId =  (int)$_SESSION['client_og']; // company og id

    //Object of class
    $objAnalytics = new clsAnalytics();
    $objReports = new ClsReports();

    //Check user in session or not
    $objAnalytics->fnCheckSession();

    //Fetch all company FMRs STEP 1
    list($arrFMRInfo, $arrFMRIds, $strFMRIds) = $objReports->fnGetCompanyFMRs($intCompanyOgId, "", "", "non_archive");

    $arrViewChartSum = array();
    $arrClickChartSum = array();
    $arrDates = array();

    //Get Top five clicks count and their FMR information
    $arrTopClicksFMRInfo = $objAnalytics->fnGetTopFiveClicksFMRs($intCompanyOgId);

    // Get Benchmarks clicks information
    $arrBenchmarkClicksFMRInfo = $objAnalytics->fnGetBenchmarkClicksByMediaType();

    // Get Benchmarks views information
    $arrBenchmarkViewsFMRInfo = $objAnalytics->fnGetBenchmarkViewsByMediaType();

    //checking FMR exist or not
    if ($strFMRIds != '') {
        //Fetch all company FMRs Views STEP 2
        // Query  which give result Count(FMRCount) ViewCount of each media.
        $arrFMRViews = $objReports->fnGetViews($strFMRIds);

        # GET the Click Related data
        $arrFMRClicks = $objReports->fnGetClicks($strFMRIds);

        //GET all FMR with Videos
        $arrFMRWithVideos = $objReports->fnGetFMRWithVideo($intCompanyOgId);

        if (count($arrFMRIds) > 0) {
            #Get Information for all FMR types
            foreach ($arrFMRInfo as $strFMRType => $arrFMRs) {

                #Collect All Views for the all FMRs with and without video
                $arrFMRInformation = array();
                $arrFMRViewsInformationWith = array();

                foreach ($arrFMRs as $key => $intFMRId) {
                    $arrFMRInformation['views'][] = $arrFMRViews[$intFMRId];
                    $arrFMRInformation['clicks'][] = $arrFMRClicks[$intFMRId];

                    #Check that FMR from with video or not.
                    if (in_array($intFMRId, $arrFMRWithVideos) == true) {
                        $arrFMRViewsInformationWith['views'][] = $arrFMRViews[$intFMRId];
                        $arrFMRViewsInformationWith['clicks'][] = $arrFMRClicks[$intFMRId];
                    }
                }

                #Total Views
                $arrMediaTypeCount[$strFMRType]['viewcount'] = (int)array_sum($arrFMRInformation['views']);
                $arrMediaTypeCount[$strFMRType]['clickcount'] = (int)array_sum($arrFMRInformation['clicks']);

                #Get total FMRs
                $arrMediaTypeCount[$strFMRType]['fmrcount'] = (int)count($arrFMRs);

                //Assign with video count to total count of media.
                $arrMediaTypeCount[$strFMRType]["withvideo"]['fmrcount'] = count($arrFMRViewsInformationWith['views']);
                $arrMediaTypeCount[$strFMRType]["withvideo"]['viewcount'] = (int)array_sum($arrFMRViewsInformationWith['views']);
                $arrMediaTypeCount[$strFMRType]["withvideo"]['clickcount'] = (int)array_sum($arrFMRViewsInformationWith['clicks']);

                //Assign with out video count to 0
                #Views
                $arrMediaTypeCount[$strFMRType]["withoutvideo"]['viewcount'] = (int)($arrMediaTypeCount[$strFMRType]['viewcount'] - $arrMediaTypeCount[$strFMRType]["withvideo"]['viewcount']);
                #Clicks
                $arrMediaTypeCount[$strFMRType]["withoutvideo"]['clickcount'] = (int)($arrMediaTypeCount[$strFMRType]['clickcount'] - $arrMediaTypeCount[$strFMRType]["withvideo"]['clickcount']);
                #FMR Count
                $arrMediaTypeCount[$strFMRType]["withoutvideo"]['fmrcount'] = (int)($arrMediaTypeCount[$strFMRType]['fmrcount'] - $arrMediaTypeCount[$strFMRType]["withvideo"]['fmrcount']);
            }
        }

        // Query for View Chart between dates, For last 2 months.
        $arrViewChart = $objAnalytics->fnGetAnalyticViewChartInfo($intCompanyOgId, $strFMRIds); //condition on

        // Condition for Click chart between dates, default before 2 months with Company
        $arrClickChart = $objAnalytics->fnGetAnalyticClickChartInfo($intCompanyOgId, $strFMRIds);

        //Process views and clicks and prepare 7 days interval data for graph
        list($arrViewChartSum, $arrClickChartSum, $arrDates) = $objAnalytics->fnSumWeekViewsClicks($arrViewChart, $arrClickChart);
    }
    //Main tab of (Analytics, Tracking ,Searching Engines, Reports);
    $strTabHtml = $objAnalytics->fnAnalyticsMaintab('View');

    //Include JS and CSS files
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/analytics.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/jsapi.js');

    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/justmeans/jmbackend-global.css');
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/dashboard.css');

    $arrData = array(
        'arrViewChart' => $arrViewChartSum,
        'arrMediaTypeCount' => $arrMediaTypeCount,
        'arrBenchmarkViewsFMRInfo' => $arrBenchmarkViewsFMRInfo,
        'arrBenchmarkClicksFMRInfo' => $arrBenchmarkClicksFMRInfo,
        'arrClickChart' => $arrClickChartSum,
        "arrTopClicksFMRInfo" => $arrTopClicksFMRInfo,
        'strTabHtml' => $strTabHtml,
        "arrDts" => $arrDates,
    );
    return theme('view-analytics', $arrData);
}

/**
 * Getting Clicks and Views for media type
 *
 * @param string $strMediaType : FMR media type
 *
 * @return string
 */
function threebl_analytics_MediaType($strMediaType)
{
    //Include all required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');
    module_load_include('inc', 'threebl_analytics_reports', 'inc/clsReports');

    //Object of class
    $objAnalytics = new clsAnalytics();
    $objReports = new ClsReports();

    //Check user in session or not
    $objAnalytics->fnCheckSession();

    //checking FMR Type is proper or not. if not then redirect to views page .
    $arrFmrType = array('press_release', 'blog', 'article', 'newsletter', 'multimedia', 'all');

    //Check the Media type get from the URL
    $intTotalRecords = in_array($strMediaType, $arrFmrType);

    //Redirect user to analytic page if the media type is incorrect
    if (!$intTotalRecords) {
        drupal_goto('Dashboard/Analytics/Views');
    }

    $intCompanyOgId = (int)$_SESSION['client_og']; // company og id

    // Query for getting all FMRs that get published
    list($arrFMRInfo, $arrFMRIds, $strFMRIds) = $objAnalytics->fnGetFMRViewClickByCompany($intCompanyOgId, $strMediaType);

    //Initialize variable
    $arrReferLink = array();
    $arrCountryName = array();
    $arrViewChartSum = array();
    $arrClickChartSum = array();
    $arrDates = array();
    $arrMediaTypeCount = array();

    //checking the FMR's array exist or not.
    if ($strFMRIds != '') {

        // Query  which give result Count(FMRCount) ViewCount of each media.
        $arrFMRViews = $objReports->fnGetViews($strFMRIds);

        # GET the Click Related data
        $arrFMRClicks = $objReports->fnGetClicks($strFMRIds);

        $arrFMRInformation = array();

        if (count($arrFMRIds) > 0) {
            #Get Information for all FMR types
            foreach ($arrFMRInfo as $intFMRId => $arrFMRs) {

                $arrFMRInformation['views'][] = $arrFMRViews[$intFMRId];
                $arrFMRInformation['clicks'][] = $arrFMRClicks[$intFMRId];
            }

            #Total Views and Clicks
            $arrMediaTypeCount['viewcount'] = (int)array_sum($arrFMRInformation['views']);
            $arrMediaTypeCount['clickcount'] = (int)array_sum($arrFMRInformation['clicks']);
        }

        // Views Date by datevisited
        $strChartDateBetweenFlag = "1";
        //Get Views for the specific media type for chart
        $arrViewChart = $objAnalytics->fnGetAnalyticViewChartInfo($intCompanyOgId, $strFMRIds, $strChartDateBetweenFlag);

        // Condition for Click chart between dates, default before 2 months of particular media type
        $arrClickChart = $objAnalytics->fnGetAnalyticClickChartInfo($intCompanyOgId, $strFMRIds);

        //Process views and clicks and prepare 7 days interval data for graph
        list($arrViewChartSum, $arrClickChartSum, $arrDates) = $objAnalytics->fnSumWeekViewsClicks($arrViewChart, $arrClickChart);

        // Get country name and click count for google map.
        $arrCountryName = $objAnalytics->fnGetFMRClicksByCountryGoogleMap($intCompanyOgId, $strMediaType);
        //Get referrer website by media type
        $arrReferLink = $objAnalytics->fnGetFMRReferrerClicksByMediaType($intCompanyOgId, $strMediaType);
    }

    //Main tab of (Analytics, Tracking ,Searching Engines, Reports);
    $strTabHtml = $objAnalytics->fnAnalyticsMaintab('View');

    //Include JS and CSS files
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/analytics.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/jsapi.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/jquery.js');
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/justmeans/jmbackend-global.css');

    $arrData = array('arrClickChart' => $arrClickChartSum, 'arrViewChart' => $arrViewChartSum, 'strTabHtml' => $strTabHtml, 'strMediaType' => $strMediaType, 'arrRefereLink' => $arrReferLink, 'arrCountryName' => $arrCountryName, 'arrMediaCount' => $arrMediaTypeCount, "arrDts" => $arrDates, 'arrShowSecondLevelType' => $objAnalytics->arrShowMediaType);

    return theme('view-media-type', $arrData);
}

/**
 * Getting views and clicks by media id
 *
 * @param int $intMediaId : Media Id
 *
 * @return string
 */
function threebl_analytics_MediaTypeId($intMediaId)
{
    //Include all required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');

    //Object of class
    $objAnalytics = new clsAnalytics();

    //Check user in session or not
    $objAnalytics->fnCheckSession();
    $intCompanyOgId =  (int)$_SESSION['client_og']; // company id (sync id)

    //Getting FMR Title by media id.
    $objNode = node_load($intMediaId);
    $strMediaTitle = $objNode->title; //Get FMR title

    //getting FMR Publish date
    $arrFmrPublish = $objNode->field_fmr_date_time;
    $strPublishDate = $arrFmrPublish['und'][0]['value'];

    //getting FMR Media type
    $arrFmrType = $objNode->field_fmr_type_of_content;
    $strFmrType = $arrFmrType['und'][0]['value'];

    //getting Benchmark views and clicks
    if (strtotime($strPublishDate) <= strtotime($objAnalytics->strBenchmarkNAMonth)) {
        // Set N/A value for Benchmark views and clicks, if FMR published before Apr 2014
        $intBenchmarkView = "N/A";
        $intBenchmarkClick = "N/A";
    } else {
        // Set value for Benchmark views and clicks
        $intBenchmarkView = ((int) $objNode->field_fmr_average_views['und'][0]['value'] > 0) ? number_format((int) $objNode->field_fmr_average_views['und'][0]['value']) : "-";
        $intBenchmarkClick = ((int) $objNode->field_fmr_average_clicks['und'][0]['value'] > 0) ? number_format((int) $objNode->field_fmr_average_clicks['und'][0]['value']) : "-";
    }

    // Primary Category
    $strPrimaryCategoryName = "";
    $intPrimaryCategoryId = (int) $objNode->field_fmr_primary_category['und'][0]['target_id'];
    $strPrimaryCategory = $objAnalytics->fnPrimaryCategoryName($intPrimaryCategoryId);
    if ($strPrimaryCategory != "") {
        $strPrimaryCategoryName = $strPrimaryCategory;
    }

    // Is Archive
    $strIsArchive = "";
    $strCheckIsArchive = $objNode->field_dist_archive['und'][0]['value'];
    if ($strCheckIsArchive == 1) {
        $strIsArchive = " (A)";
    }

    // check Nid of node present of not.
    if (empty($objNode)) {
        drupal_goto('Dashboard/Analytics/Views');
    }

    // Query for View count of Particular FMR
    $arrViewCount = $objAnalytics->fnGetFMRViewCountByMediaId($intCompanyOgId, $intMediaId);

    // Query for Click count of Particular FMR
    $arrClickCount = $objAnalytics->fnGetFMRClickCountByMediaId($intCompanyOgId, $intMediaId);

    // Get country name and click count for google map by media id
    $arrCountryName = $objAnalytics->fnGetFMRClicksByCountryGoogleMap($intCompanyOgId, $intMediaId);

    // get referrer website by media id
    $arrReferLink = $objAnalytics->fnGetFMRReferrerClicksByMediaType($intCompanyOgId, $intMediaId);

    //Main tab of (Analytics, Tracking ,Searching Engines, Reports);
    $strTabHtml = $objAnalytics->fnAnalyticsMaintab('View');

    //Include JS and CSS files
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/analytics.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/jsapi.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/jquery.js');
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/justmeans/jmbackend-global.css');

    $arrData = array(
        'arrClickCount' => $arrClickCount,
        'arrRefereLink' => $arrReferLink,
        'arrCountryName' => $arrCountryName,
        'arrViewCount' => $arrViewCount,
        'strTabHtml' => $strTabHtml,
        'strMediaTitle' => $strMediaTitle,
        'strPublishDate' => $strPublishDate,
        'strFmrType' => $strFmrType,
        'arrShowMediaType' => $objAnalytics->arrShowMediaType,
        'intBenchmarkView' => $intBenchmarkView,
        'intBenchmarkClick' => $intBenchmarkClick,
        'strIsArchive' => $strIsArchive,
        'strPrimaryCategoryName' => $strPrimaryCategoryName
    );
    return theme('view-media-id', $arrData);
}

/**
 * Get Media type records by Ajax
 */
function threebl_analytics_MediaTypeAjax()
{
    //Include all required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');
    module_load_include('inc', 'threebl_analytics_reports', 'inc/clsReports');

    //Object of class
    $objAnalytics = new clsAnalytics();
    $objReports = new ClsReports();

    //Check user in session or not
    $objAnalytics->fnCheckSession();
    $intCompanyOgId =  (int)$_SESSION['client_og']; // company id (sync id)
    $strMediaType = '';

    if (isset($_POST['type'])) {
        $strMediaType = trim($_POST['type']);
    }

    $intPage = $_POST['page'] ? $_POST['page'] : 1; //Set default page number
    $intLimit = 25; //Set limit of FMR per page
    $intStart = ($intPage - 1) * $intLimit; //Calculate starting index of page
    $intNext = 0;
    $intPrev = 0;

    # To get all FMRs information that get published
    list($arrMediaResult, $arrGetFMRIds, $strFMRIds, $intTotalRecords) = $objAnalytics->fnGetCompanyPublishedFMRs($intCompanyOgId, $strMediaType, $intStart, $intLimit);

    # To fetch FMR views information
    $arrViewFMRInfo = $objReports->fnGetViews($strFMRIds);

    # To fetch FMR Clicks information
    $arrClickFMRInfo = $objReports->fnGetClicks($strFMRIds);

    if (!empty($arrMediaResult)) {
        foreach ($arrMediaResult as $intFMRId => $arrMediaResultData) {
            $arrViewClick[$intFMRId]['nid'] = $arrMediaResultData["nid"];
            $arrViewClick[$intFMRId]['title'] = $arrMediaResultData["title"];
            $arrViewClick[$intFMRId]['publishDate'] = $arrMediaResultData["publishdate"];
            $arrViewClick[$intFMRId]['viewCount'] = $arrViewFMRInfo[$intFMRId];
            $arrViewClick[$intFMRId]['type'] = $arrMediaResultData["media"];
            $arrViewClick[$intFMRId]['media_type'] = trim($objAnalytics->arrShowMediaType[$arrMediaResultData["media"]]);
            $arrViewClick[$intFMRId]['campaign'] = (string)$arrMediaResultData["campaign"];
            $arrViewClick[$intFMRId]['clickCount'] = $arrClickFMRInfo[$intFMRId];
            $arrViewClick[$intFMRId]['benchmark_view'] = $arrMediaResultData["benchmark_view"];
            $arrViewClick[$intFMRId]['benchmark_click'] = $arrMediaResultData["benchmark_click"];
            $arrViewClick[$intFMRId]['primary_category'] = $arrMediaResultData["primary_category"];
            $arrViewClick[$intFMRId]['is_archive'] = $arrMediaResultData["is_archive"];
        }
    }

    //check next option;
    $intNumPages = ceil($intTotalRecords / $intLimit);

    if ($intNumPages == $intPage) {
        $intNext = 1;
    }
    //check for last option
    if ($intPage == 1) {
        $intPrev = 1;
    }

    // Primary Categories array to replace long title with short title
    $arrLongPrimaryCategoryName = $objAnalytics->fnGetPrimaryCategoryShortName();
    $arrData = array('arrViewClickMediaResult' => $arrViewClick, 'intNext' => $intNext,
        'intPrev' => $intPrev, 'intPage' => $intPage, 'strType' => $strMediaType, 'intLastPage' => $intNumPages, "arrLongPrimaryCategoryName" => $arrLongPrimaryCategoryName);

    echo theme('view-media-type-ajax', $arrData);
}

/**
 * Function for download excel file of all FMRs
 *
 * @param string $strSubType : Report type email or excel
 *
 * @return string
 */
function threebl_analytics_excel($strSubType = '')
{
    global $base_url;

    //Include all required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');
    module_load_include('inc', 'threebl_analytics_reports', 'inc/clsReports');

    //Object of class
    $objAnalytics = new clsAnalytics();
    $objReports = new ClsReports();

    //Check user in session or not
    $objAnalytics->fnCheckSession();
    $intCompanyOgId =  (int)$_SESSION['client_og']; // Company id (sync id)
    $intCompanyNid = (int)$_SESSION['client_og_nid']; // 3bl company id

    //Get Company Name
    $strCompanyName = $objReports->fnGetCompanyName($intCompanyNid);

    //Get Media type array
    $arrShowMediaType = $objAnalytics->arrShowMediaType;

    # To get all FMRs that get published from last 6 months
    list($arrMediaResult, $arrGetFMRIds, $strFMRIds) = $objAnalytics->fnGetCompanyFMRsExcel($intCompanyOgId, "all");

    # To fetch FMR views information
    $arrViewFMRInfo = $objReports->fnGetViews($strFMRIds);

    # To fetch FMR Clicks information
    $arrClickFMRInfo = $objReports->fnGetClicks($strFMRIds);

    if (!empty($arrMediaResult)) {
        foreach ($arrMediaResult as $intFMRId => $arrMediaResultData) {
            $arrViewClick[$intFMRId]['nid'] = $arrMediaResultData["nid"];
            $arrViewClick[$intFMRId]['title'] = $arrMediaResultData["title"];
            $arrViewClick[$intFMRId]['publishDate'] = $arrMediaResultData["publishdate"];
            $arrViewClick[$intFMRId]['viewCount'] = $arrViewFMRInfo[$intFMRId];
            $arrViewClick[$intFMRId]['type'] = $arrMediaResultData["media"];
            $arrViewClick[$intFMRId]['campaign'] = (string)$arrMediaResultData["campaign"];
            $arrViewClick[$intFMRId]['primary_category'] = $arrMediaResultData["primary_category"];
            $arrViewClick[$intFMRId]['benchmark_view'] = $arrMediaResultData["benchmark_view"];
            $arrViewClick[$intFMRId]['benchmark_click'] = $arrMediaResultData["benchmark_click"];
            $arrViewClick[$intFMRId]['is_archive'] = $arrMediaResultData["is_archive"];
            $arrViewClick[$intFMRId]['clickCount'] = $arrClickFMRInfo[$intFMRId];
            $arrViewClick[$intFMRId]['video'] = ($arrMediaResultData["video"]) ? 'Yes' : 'No';
        }
    }

    if ($strSubType != 'email') {
        header("Content-Type: application/vnd.ms-excel;");
        header("Content-type: application/x-msexcel;");
        header("Content-disposition: attachment; filename=FMRList" . time() . ".xls");

        $strHTMLTable = '<table width="100%" border="1" cellspacing="2" cellpadding="2" bordercolor="#000000">
                        <tr>
                            <td colspan="10"><b>'.$strCompanyName.' - Detailed Analytics for all FMRs</b></td>
                        </tr>
                        <tr>
                            <td colspan="10">Benchmark: The Benchmarks for individual FMRs are the site-wide average activity (views and clicks) for all FMRs within the same Media Type, the same Primary Category and using the same timeframe in which the given FMR was distributed. (The date, media type and primary category for a given FMR are all listed below the title, above.)

Benchmarks for a given month are calculated 8 days after the end of the month. Before then you will see a dash. Benchmarks before April 2014 were not calculated and you will see "N/A".</td>
                        </tr>
                        <tr>
                            <td colspan="10">&nbsp;</td>
                        </tr>
                        <tr>
                            <td align="center" width="8%"><strong>&nbsp;Date&nbsp;</strong></td>
                            <td align="center" width="40%"><strong>&nbsp;Title&nbsp;</strong></td>
                            <td align="center" width="10%"><strong>&nbsp;Primary Category&nbsp;</strong></td>
                            <td align="center" width="16%"><strong>&nbsp;Campaign&nbsp;</strong></td>
                            <td align="center" width="8%"><strong>&nbsp;FMR Type&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;Video&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;#Views&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;#Clicks&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;Benchmark Views&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;Benchmark Clicks&nbsp;</strong></td>
                          </tr>';

        //$arrViewClick contain all the combination of views and clicks fields.
        foreach ($arrViewClick as $arrFmr) {
            $strMediaType = trim($arrFmr["type"]); // getting original array type.
            $strType = trim($arrShowMediaType[$strMediaType]);
            $strTitle = $objReports->fnRemoveWordFormatting($arrFmr['title']);
            $intGetFMRId = (int)$arrFmr['nid'];

            //Archive status
            $strIsArchive = "";
            if ($arrFmr['is_archive'] == 1) {
                $strIsArchive = " (A)";
            }

            $strHTMLTable .= "<tr>
                            <td align='center' valign ='middle'>".date('d M Y', strtotime($arrFmr["publishDate"])).$strIsArchive."</td>
                            <td valign ='middle' align='left'><a href='$base_url/Dashboard/Analytics/Views/mediaid/$intGetFMRId'>".$strTitle."</a></td>
                            <td align='left' valign ='middle'>".$arrFmr["primary_category"]."</td>
                            <td align='left' valign ='middle'>".$arrFmr['campaign']."</td>
                            <td align='left' valign ='middle'>".$strType."</td>
                            <td align='center' valign ='middle'>".$arrFmr["video"]."</td>
                            <td align='right' valign ='middle'>".(int) $arrFmr["viewCount"]."</td>
                            <td align='right' valign ='middle'>".(int) $arrFmr["clickCount"]."</td>
                             <td align='right' valign ='middle'>".$arrFmr["benchmark_view"]."</td>
                            <td align='right' valign ='middle'>".$arrFmr["benchmark_click"]."</td>
                          </tr>";
        }
        echo $strHTMLTable .= '</table>';

        $intTypeOFReport = 8;

        #get the company id
        $intCompanyNid = $_SESSION['client_og_nid']; // node id

        #Set the report download by value to excel : 1
        $strReportFileType = "excel";

        # Email addresses are not available for case pdf
        $strEmail = "Download by Excel";

        // Call function fnInsert3blReportDetails To insert the details of report
        $objReports->fnInsert3blReportDetails($intCompanyNid, $strEmail, $intTypeOFReport, $strReportFileType);
        exit;

    } else {
        $strHTMLTable = '<table width="100%" border="1" cellspacing="2" cellpadding="2" bordercolor="#000000">
                        <tr>
                            <td colspan="7">&nbsp;</td>
                        </tr>
                        <tr>
                            <td align="center" width="8%"><strong>&nbsp;Date&nbsp;</strong></td>
                            <td align="center" width="40%"><strong>&nbsp;Title&nbsp;</strong></td>
                            <td align="center" width="10%"><strong>&nbsp;Channel(s)&nbsp;</strong></td>
                            <td align="center" width="16%"><strong>&nbsp;Campaign&nbsp;</strong></td>
                            <td align="center" width="8%"><strong>&nbsp;FMR Type&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;Video&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;#Views&nbsp;</strong></td>
                            <td align="center" width="6%"><strong>&nbsp;#Clicks&nbsp;</strong></td>
                          </tr>';

        //$arrViewClick contain all the combination of views and clicks fields.
        foreach ($arrViewClick as $intFMRId => $strFmr) {
            $strMediaType = trim($strFmr["type"]); // getting original array type.
            $strType = trim($arrShowMediaType[$strMediaType]);
            $strTitle = $strFmr['title'];
            $strHTMLTable .= "<tr>
								<td align='center' valign ='middle'>" . date('d M Y', strtotime($strFmr["publishDate"])) . "</td>
								<td valign ='middle' align='left'>" . $strTitle . "</td>
								<td align='left' valign ='middle'>" . implode(',', $arrFMRVerticals[$intFMRId]) . "</td>
								<td align='left' valign ='middle'>" . $strFmr['campaign'] . "</td>
								<td align='left' valign ='middle'>" . $strType . "</td>
								<td align='center' valign ='middle'>" . $strFmr["video"] . "</td>
								<td align='right' valign ='middle'>" . (int)$strFmr["viewCount"] . "</td>
								<td align='right' valign ='middle'>" . (int)$strFmr["clickCount"] . "</td>
							  </tr>";
        }
        //foreach
        $strHTMLTable .= '</table>';
        #Get the repoty type : such as 1  for MCSR,2 for CSMT
        $intTypeOFReport = 0;

        #get the company id
        $intCompanyNid = $_SESSION['client_og_nid']; // node id

        #Set the report download by value to excel : 1
        $strReportFileType = "excel";

        # Email addresses are not available for case pdf
        $strEmail = "Download by Excel";

        // Call function fnInsert3blReportDetails To insert the details of report
        $objReports->fnInsert3blReportDetails($intCompanyNid, $strEmail, $intTypeOFReport, $strReportFileType);

        return $strHTMLTable;
    }
}

/**
 * Media Searching
 *
 * @return string
 */
function threebl_analytics_searching()
{
    //Include required files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');
    module_load_include('inc', 'threebl_affiliate', 'inc/clsTracking');

    //Creating the Object of Class
    $objAnalytics = new clsAnalytics();

    //Check user in session or not
    $objAnalytics->fnCheckSession();

    $intCompanyNid = (int)$_SESSION['client_og_nid']; // nod id

    //Creating the Object of Class
    $objClsTracking = new clsTracking($intCompanyNid);

    // get latest fmr
    $arrLatestFmr = $objClsTracking->fnGetLatestFMR(0, $intCompanyNid);

    //Main tab of (Analytics, Tracking ,Searching Engines, Reports);
    $strTabHtml = $objAnalytics->fnAnalyticsMaintab('Search');

    //Include required JS and CSS files
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/tracking.js');
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/justmeans/jmbackend-global.css');

    $arrData = array('strTabHtml' => $strTabHtml,
        'arrLatestFmr' => $arrLatestFmr
    );
    return theme('media-searching', $arrData);
}

/**
 * Reports Functionality management
 *
 * @return string
 */
function threebl_analytics_reports()
{
    //Include required class files
    module_load_include('inc', 'threebl_analytics', 'inc/clsAnalytics');

    //Object of Analytic class
    $objAnalytics = new clsAnalytics();

    //Check user in session or not
    $objAnalytics->fnCheckSession();

    //Define variables
    global $base_url, $conf;

    $intCompanyNid = $_SESSION['client_og_nid']; // node id
    $intCompanyOGId = $_SESSION['client_og'];

    //Include required class files
    module_load_include('inc', 'threebl_analytics_reports', 'inc/clsReports');
    module_load_include('inc', 'threebl_affiliate', 'inc/clsTracking');
    module_load_include('inc', 'threebl_analytics_reports', 'inc/sendEmail');

    //Include all required java script files
    drupal_add_js(drupal_get_path('theme', 'threebl') . '/js/jquery-latest.js');
    drupal_add_js(drupal_get_path('theme', 'threebl') . '/js/validator/jquery.validationEngine.js');
    drupal_add_js(drupal_get_path('theme', 'threebl') . '/js/validator/jquery.validationEngine-en.js');
    drupal_add_js(drupal_get_path('module', 'threebl_analytics') . '/js/report.js');

    //Include all necessary css files
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/justmeans/jmbackend-global.css');
    drupal_add_css(drupal_get_path('theme', 'threebl') . '/css/validator/validationEngine.jquery.css');

    $strTime = time();

    $strSubmit = (isset($_POST['submit'])) ? $_POST['submit'] : ''; //change

    if ($strSubmit == "Send") {    //change
        $strType = trim($_POST['sendemail']);
        $strMediaType = trim($_POST['mediaTypOrId']);
        $strServerName = trim($_SERVER['HTTP_HOST']);
        $strEmail = trim($_POST['email']);
        $strSub = addslashes(trim($_POST['subject']));
        $strMsg = addslashes(nl2br(trim($_POST['msg'])));

        $strSender = $conf['no_reply_from'];

        $strRecipient = $strEmail;

        $strSubject = ($strSub != '') ? $strSub : "Report";
        $strMessage = ($strMsg != '') ? $strMsg : "Hi,<br><br>   Please find the attached file.<br><br>Thanks,<br>3BLMedia";

        $strSenderName = $conf['sender_name'];
        $strHeader = $base_url . "/Dashboard/Report/Views/pdfhtml/header";
        $strFooter = $base_url . "/Dashboard/Report/Views/pdfhtml/footer";

        #get the number as the type of the report such as 1:bdaf,2:MCSR
        $intTypeOFReport = 0;

        #set how report get send either i.e. email
        $strReportFileType = "email";
        //start :change
        switch ($strType) {
            case "BADF":
                $strExcelData = threebl_analytics_excel("email");
                $xlfile = @fopen("/var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/excel/Report$strTime.xls", 'wb+');
                fwrite($xlfile, $strExcelData);
                fclose($xlfile);
                $strAttachment = "/var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/excel/Report$strTime.xls";

                $boolSent = fnSendEmail($strSenderName, $strSender, $strRecipient, $strSubject, $strMessage, $strAttachment);
                if ($boolSent) {
                    drupal_set_message("Report sent successfully");
                }
                $intTypeOFReport = 1;
                break;

            case "MCSR":
                $strUrl = http_build_query(array('client_og_nid' => $intCompanyNid, 'client_og' => $_SESSION['client_og']));
                $strSrc1 = $base_url . "/Dashboard/Report/Views/" . base64_encode($strUrl);

                exec('xvfb-run -a -s "-screen 0 640x480x16" /var/www/bin/wkhtmltopdf --quiet --margin-top 15mm --header-html ' . $strHeader . ' --footer-html "' . $strFooter . '" ' . $strSrc1 . " /var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/pdf/Report$strTime.pdf");
                $intTypeOFReport = 2;
                break;

            case "CSMT":
                if ($strMediaType == '') {
                    drupal_goto($base_url);
                    die;
                }
                $strUrl = http_build_query(array('client_og_nid' => $intCompanyNid, 'strMediaType' => "$strMediaType", 'client_og' => $_SESSION['client_og']));
                $strSrc1 = $base_url . "/Dashboard/Report/Views/MediaType/" . base64_encode($strUrl);

                exec('xvfb-run -a -s "-screen 0 640x480x16" /var/www/bin/wkhtmltopdf --quiet --margin-top 15mm --header-html ' . $strHeader . ' --footer-html "' . $strFooter . '" ' . $strSrc1 . " /var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/pdf/Report$strTime.pdf");
                $intTypeOFReport = 3;
                break;

            case "CSC":
                if ((int)$strMediaType == 0) { //Check campaign Id [$steMediaType: is nothing but campaign id]
                    drupal_goto($base_url);
                    die;
                }
                $strUrl = http_build_query(array('client_og_nid' => $intCompanyNid, 'intCampaignId' => "$strMediaType", 'client_og' => $_SESSION['client_og']));
                $strSrc1 = $base_url . "/Dashboard/Report/Views/MediaType/" . base64_encode($strUrl);

                exec('xvfb-run -a -s "-screen 0 640x480x16" /var/www/bin/wkhtmltopdf --quiet --margin-top 15mm --header-html ' . $strHeader . ' --footer-html "' . $strFooter . '" ' . $strSrc1 . " /var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/pdf/Report$strTime.pdf");
                $intTypeOFReport = 4;
                break;

            case "FMR":
                if ((int)$strMediaType == 0) {
                    drupal_goto($base_url);
                    die;
                }
                $strUrl = http_build_query(array('client_og_nid' => $intCompanyNid, 'intMediaId' => "$strMediaType", 'client_og' => $_SESSION['client_og']));
                $strSrc1 = $base_url . "/Dashboard/Report/Views/MediaId/" . base64_encode($strUrl);

                exec('xvfb-run -a -s "-screen 0 640x480x16" /var/www/bin/wkhtmltopdf --quiet --margin-top 15mm --header-html ' . $strHeader . ' --footer-html "' . $strFooter . '" ' . $strSrc1 . " /var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/pdf/Report$strTime.pdf");
                $intTypeOFReport = 5;
                break;

        }
        //switch
        //end :change --changed if-else to switch case
        $strAttachment = "/var/www/vhosts/" . $strServerName . "/httpdocs/sites/default/files/pdf/Report$strTime.pdf";

        if (file_exists($strAttachment)) {

            //Send email function
            $boolSent = fnSendEmail($strSenderName, $strSender, $strRecipient, $strSubject, $strMessage, $strAttachment);
            if ($boolSent) {
                // Object of Report class
                $objReports = new ClsReports();
                // Call function fnInsert3blReportDetails To insert the details of report
                $objReports->fnInsert3blReportDetails($intCompanyNid, $strEmail, $intTypeOFReport, $strReportFileType);
                drupal_set_message("Report sent successfully");
            }
        }
    }

    $strTabHtml = $objAnalytics->fnAnalyticsMaintab('Reports');

    //Get Company Campaign List
    $objGetCampaign = $objAnalytics->fnGetAllCampaign($intCompanyOGId);
    //Creating the Object of Class
    $objClsTracking = new clsTracking($intCompanyNid);

    //Get Latest FMRs.
    $arrLatestFMR = $objClsTracking->fnGetLatestFMR(0, $intCompanyNid);
    //Get Company All FMRs [last 6 Months]
    $vars = array(
        'strTabHtml' => $strTabHtml,
        'base_url' => $base_url,
        'objCampaign' => $objGetCampaign,
        'objFMR' => $arrLatestFMR,
        'arrShowMediaType' => $objAnalytics->arrShowMediaType
    );
    return theme('reports', $vars);
}

/**
 * hook for theme
 *
 * @return array
 */
function threebl_analytics_theme()
{
    $themes = array(
        'view-analytics' => array(
            'template' => 'templates/analytics',
            'arguments' => array('name' => 'analytics')
        ),

        'view-media-type' => array(
            'template' => 'templates/view-media-type',
            'arguments' => array('name' => 'media-type')
        ),

        'view-media-id' => array(
            'template' => 'templates/view-media-id',
            'arguments' => array('name' => 'media-id')
        ),

        'view-media-type-ajax' => array(
            'template' => 'templates/view-media-type-ajax',
            'arguments' => array('name' => 'view-media-type-ajax')
        ),

        'media-searching' => array(
            'template' => 'templates/searching',
            'arguments' => array('name' => 'searching')
        ),

        'view-excel' => array(
            'template' => 'templates/view-excel',
            'arguments' => array('name' => 'excel')
        ),

        'reports' => array(
            'template' => 'templates/reports',
            'arguments' => array('name' => 'reports')
        ),

        'media3Report' => array(
            'template' => 'templates/media3Report',
            'arguments' => array('name' => 'media3Report')
        ),
    );
    return $themes;
}

/**
 * If this is a view that outputs FMR headlines, save the 'result' object to be
 * processed later by threebl_analytics_cron
 **/
function threebl_analytics_views_post_render(&$view, &$output, &$cache)
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // This is our array of views and displays within those views that return FMR headlines
    // throughout the public site
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    $relevant_views_displays = array(
        'homepage_content' => array('homepage_fmr' => 1),
        'csr_news' => array('csr_news_page' => 1),
        'fmr_related_content_blocks' => array('block_3' => 1, 'block_5' => 1),
        'campaign_content' => array('page_1' => 1, 'block_1' => 1),
        'client_content' => array('block_2' => 1)
    );

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Check the current view and display against this array
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    if (!empty($relevant_views_displays[$view->name][$view->current_display])) {

        ////////////////////////////////////////////////////////////////////////////////////
        // if we have a match,
        // a) get the IP addr of the visitor and then
        // b) save the $view->result object and the IP addr to be processed later.
        ////////////////////////////////////////////////////////////////////////////////////
        //watchdog('Analytics view','<pre>'.$view->name.'-'.$view->current_display.'</pre>');
        $strIpAddress = $_SERVER['REMOTE_ADDR'];

        // If this is the result of something from our server, e.g. apache solr search indexing,
        // skip it.
        if (substr($strIpAddress, 0, 3) == '10.') {
            return;
        }

        // Get Date/time
        $strDateTime = date("Y-m-d H:i:s");
        $strJustDate = date("Y-m-d");
        $results_str = serialize($view->result);
        db_insert('threebl_tmp_fmr_headline_views')->fields(array(
            "ip_addr" => $strIpAddress,
            "view_datetime" => $strDateTime,
            "view_date" => $strJustDate,
            "fmr_result" => $results_str,
        ))->execute();
    }
}

/**
 * check user browser for IE issue
 *
 * @return array
 */
function threebl_Check_user_browser()
{
    //Define variables
    $strClickCss = "display:none";
    $intClickFlag = 0;

    //Checking User Browser is IE 8 OR not.
    $strIEBrowser = (strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE 8.') !== false);
    if ($strIEBrowser == 1) {
        //css for id = clicks li
        $strClickCss = "visibility:hidden;height:0px";
        $intClickFlag = 1;
    }
    return array($strClickCss, $intClickFlag);

}//end_threebl_Check_user_browser